# Generated by Django 5.0.2 on 2025-04-19 18:00

import ckeditor_uploader.fields
import colorfield.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Page title shown in browser tab and headings', max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(help_text='URL-safe identifier (e.g., /about-us)', max_length=200, unique=True, verbose_name='Slug')),
                ('url_override', models.CharField(blank=True, help_text='Custom URL if needed (leave blank to use slug)', max_length=255, null=True, verbose_name='URL Override')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='Status')),
                ('is_homepage', models.BooleanField(default=False, verbose_name='Is Homepage')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('publish_date', models.DateTimeField(blank=True, null=True, verbose_name='Publish Date')),
                ('menu_placement', models.CharField(choices=[('none', 'None'), ('header', 'Header'), ('footer', 'Footer'), ('sidebar', 'Sidebar'), ('header_footer', 'Header & Footer')], default='none', max_length=20, verbose_name='Menu Placement')),
                ('menu_label', models.CharField(blank=True, help_text='Display label for navigation menus (defaults to page title if empty)', max_length=100, verbose_name='Menu Label')),
                ('order', models.IntegerField(default=0, help_text='Order of the page in menus', verbose_name='Order')),
                ('custom_css_class', models.CharField(blank=True, max_length=100, verbose_name='Custom CSS Class')),
                ('background_theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('custom', 'Custom')], default='light', max_length=20, verbose_name='Background Theme')),
                ('background_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=25, null=True, samples=None, verbose_name='Background Color')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='Language')),
                ('page_settings_json', models.JSONField(blank=True, default=dict, verbose_name='Page Settings')),
                ('meta_title', models.CharField(blank=True, help_text='Custom title for search engine (defaults to page title if empty)', max_length=100, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, help_text='Summary shown in search results', verbose_name='Meta Description')),
                ('meta_keywords', models.TextField(blank=True, help_text='(Legacy) keywords for search', verbose_name='Meta Keywords')),
                ('og_title', models.CharField(blank=True, help_text='Facebook/Twitter preview title', max_length=100, verbose_name='OG Title')),
                ('og_description', models.TextField(blank=True, help_text='Social media preview text', verbose_name='OG Description')),
                ('og_image', models.ImageField(blank=True, help_text='Image shown when the link is shared', null=True, upload_to='og_images/', verbose_name='OG Image')),
                ('canonical_url', models.URLField(blank=True, help_text='To prevent duplicate content SEO issues', verbose_name='Canonical URL')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='pagebuilder.page', verbose_name='Parent Page')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Admin-friendly name (e.g., "Hero Section")', max_length=100, verbose_name='Label')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Position')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('type', models.CharField(choices=[('template', 'Template'), ('html', 'Raw HTML'), ('wysiwyg', 'WYSIWYG Editor')], default='template', max_length=20, verbose_name='Type')),
                ('template_name', models.CharField(blank=True, help_text='If type is template, select which template to use', max_length=100, verbose_name='Template Name')),
                ('html_content', models.TextField(blank=True, help_text='Raw HTML/CSS/JS content (only used if type is "html")', verbose_name='HTML Content')),
                ('wysiwyg_content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Visual editor content (only used if type is "wysiwyg")', verbose_name='Rich Text Content')),
                ('settings', models.JSONField(blank=True, default=dict, verbose_name='Settings')),
                ('custom_css', models.TextField(blank=True, verbose_name='Custom CSS')),
                ('css_class', models.CharField(blank=True, max_length=100, verbose_name='CSS Class')),
                ('background_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=25, null=True, samples=None, verbose_name='Background Color')),
                ('text_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=25, null=True, samples=None, verbose_name='Text Color')),
                ('padding_top', models.PositiveIntegerField(blank=True, null=True, verbose_name='Padding Top (px)')),
                ('padding_bottom', models.PositiveIntegerField(blank=True, null=True, verbose_name='Padding Bottom (px)')),
                ('padding_left', models.PositiveIntegerField(blank=True, null=True, verbose_name='Padding Left (px)')),
                ('padding_right', models.PositiveIntegerField(blank=True, null=True, verbose_name='Padding Right (px)')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='pagebuilder.page', verbose_name='Page')),
            ],
            options={
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
                'ordering': ['page', 'position'],
            },
        ),
    ]
