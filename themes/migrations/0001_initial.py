# Generated by Django 5.0.2 on 2025-04-19 18:00

import colorfield.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(help_text='Used for identifying the theme in templates', unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('screenshot', models.ImageField(blank=True, null=True, upload_to='themes/', verbose_name='Screenshot')),
                ('directory', models.CharField(help_text='Directory name within themes/templates/', max_length=100, verbose_name='Template Directory')),
                ('css_file', models.CharField(blank=True, help_text='Path to main CSS file (relative to static folder)', max_length=255, verbose_name='CSS File')),
                ('js_file', models.CharField(blank=True, help_text='Path to main JS file (relative to static folder)', max_length=255, verbose_name='JS File')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active')),
                ('is_system', models.BooleanField(default=False, help_text='System themes cannot be deleted', verbose_name='System Theme')),
                ('author', models.CharField(blank=True, max_length=100, verbose_name='Author')),
                ('version', models.CharField(blank=True, max_length=20, verbose_name='Version')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('supports_blocks', models.BooleanField(default=True, verbose_name='Supports Block Editor')),
                ('supports_dark_mode', models.BooleanField(default=False, verbose_name='Supports Dark Mode')),
                ('supports_responsive', models.BooleanField(default=True, verbose_name='Supports Responsive Design')),
            ],
            options={
                'verbose_name': 'Theme',
                'verbose_name_plural': 'Themes',
            },
        ),
        migrations.CreateModel(
            name='ThemeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('key', models.SlugField(help_text='Used in templates to access this option', verbose_name='Key')),
                ('value_type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Text Area'), ('number', 'Number'), ('boolean', 'Boolean'), ('color', 'Color'), ('image', 'Image'), ('select', 'Selection')], default='text', max_length=20, verbose_name='Value Type')),
                ('default_value', models.TextField(blank=True, verbose_name='Default Value')),
                ('value', models.TextField(blank=True, verbose_name='Value')),
                ('choices', models.TextField(blank=True, help_text='JSON list of choices for select type, e.g., ["Option 1", "Option 2"]', verbose_name='Choices')),
                ('image', models.ImageField(blank=True, null=True, upload_to='themes/options/', verbose_name='Image Value')),
                ('color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=25, null=True, samples=None, verbose_name='Color Value')),
                ('label', models.CharField(help_text='Human-readable label shown in admin', max_length=100, verbose_name='Label')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='Help Text')),
                ('required', models.BooleanField(default=False, verbose_name='Required')),
                ('category', models.CharField(default='General', help_text='Used for grouping options in the admin', max_length=100, verbose_name='Category')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='themes.theme', verbose_name='Theme')),
            ],
            options={
                'verbose_name': 'Theme Option',
                'verbose_name_plural': 'Theme Options',
                'ordering': ['category', 'order', 'name'],
                'unique_together': {('theme', 'key')},
            },
        ),
    ]
