# Generated by Django 5.0.2 on 2025-04-19 18:00

import ckeditor_uploader.fields
import colorfield.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pagebuilder', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('is_read', models.BooleanField(default=False, verbose_name='Read')),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True, verbose_name='Subscribed At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Newsletter Subscriber',
                'verbose_name_plural': 'Newsletter Subscribers',
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.CharField(max_length=200, verbose_name='Site Title')),
                ('site_description', models.TextField(blank=True, verbose_name='Site Description')),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='site/', verbose_name='Site Logo')),
                ('site_favicon', models.ImageField(blank=True, null=True, upload_to='site/', verbose_name='Site Favicon')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Phone')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook URL')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter URL')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram URL')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn URL')),
                ('github_url', models.URLField(blank=True, verbose_name='GitHub URL')),
                ('youtube_url', models.URLField(blank=True, verbose_name='YouTube URL')),
                ('header_background', colorfield.fields.ColorField(default='#ffffff', image_field=None, max_length=25, samples=None, verbose_name='Header Background Color')),
                ('header_text_color', colorfield.fields.ColorField(default='#000000', image_field=None, max_length=25, samples=None, verbose_name='Header Text Color')),
                ('footer_background', colorfield.fields.ColorField(default='#f8f9fa', image_field=None, max_length=25, samples=None, verbose_name='Footer Background Color')),
                ('footer_text_color', colorfield.fields.ColorField(default='#212529', image_field=None, max_length=25, samples=None, verbose_name='Footer Text Color')),
                ('footer_content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Footer Content')),
                ('google_analytics_id', models.CharField(blank=True, max_length=50, verbose_name='Google Analytics ID')),
                ('default_meta_title', models.CharField(blank=True, max_length=100, verbose_name='Default Meta Title')),
                ('default_meta_description', models.TextField(blank=True, verbose_name='Default Meta Description')),
                ('default_og_image', models.ImageField(blank=True, null=True, upload_to='site/', verbose_name='Default OG Image')),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('position', models.CharField(choices=[('header', 'Header'), ('footer', 'Footer'), ('sidebar', 'Sidebar')], default='header', max_length=20, verbose_name='Position')),
                ('url', models.CharField(max_length=255, verbose_name='URL')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('open_in_new_tab', models.BooleanField(default=False, verbose_name='Open in New Tab')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagebuilder.page', verbose_name='Page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='portfolio.menuitem', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Menu Item',
                'verbose_name_plural': 'Menu Items',
                'ordering': ['position', 'order'],
            },
        ),
    ]
